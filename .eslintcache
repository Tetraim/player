[{"D:\\TestPlayer\\test-player\\src\\index.js":"1","D:\\TestPlayer\\test-player\\src\\App.js":"2","D:\\TestPlayer\\test-player\\src\\components\\ChannelItem.js":"3"},{"size":432,"mtime":1622298020857,"results":"4","hashOfConfig":"5"},{"size":5715,"mtime":1622573983644,"results":"6","hashOfConfig":"5"},{"size":517,"mtime":1622485269655,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"16soksa",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"D:\\TestPlayer\\test-player\\src\\index.js",[],["16","17"],"D:\\TestPlayer\\test-player\\src\\App.js",["18","19","20"],"D:\\TestPlayer\\test-player\\src\\components\\ChannelItem.js",["21","22"],"import React,  { Component } from 'react';\r\n\r\nconst ChannelItem = ({channels, manageStream}) => {\r\n    const listChannels = channels.map((channel)=>\r\n        <a className=\"list__channel\"\r\n           key={channel.id}\r\n           onClick={()=> manageStream(channel.id)}>\r\n        <img className=\"channel-img\" src={channel.icon_v2_url} alt=\"\"/>\r\n        <p>{channel.name}</p>\r\n    </a>);\r\n    return (\r\n        <div className=\"list\">\r\n            {listChannels}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChannelItem;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":13,"column":21,"nodeType":"29","messageId":"30","endLine":13,"endColumn":33},{"ruleId":"27","severity":1,"message":"31","line":14,"column":10,"nodeType":"29","messageId":"30","endLine":14,"endColumn":22},{"ruleId":"32","severity":1,"message":"33","line":68,"column":6,"nodeType":"34","endLine":68,"endColumn":17,"suggestions":"35"},{"ruleId":"27","severity":1,"message":"36","line":1,"column":18,"nodeType":"29","messageId":"30","endLine":1,"endColumn":27},{"ruleId":"37","severity":1,"message":"38","line":5,"column":9,"nodeType":"39","endLine":7,"endColumn":52},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'setChannelId' is assigned a value but never used.","Identifier","unusedVar","'updateStream' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTvChannels'. Either include it or remove the dependency array.","ArrayExpression",["42"],"'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [authToken, getTvChannels]",{"range":"45","text":"46"},[1924,1935],"[authToken, getTvChannels]"]